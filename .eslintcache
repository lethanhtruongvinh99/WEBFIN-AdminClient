[{"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\index.js":"1","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\App.js":"2","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\reportWebVitals.js":"3","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\store\\index.js":"4","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\history.js":"5","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\login-form\\index.js":"6","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\the-layout\\index.js":"7","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\reducers\\user-reducer.js":"8","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\utils\\NetworkUtils.js":"9","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\utils\\NotificationUtils.js":"10","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\rooms\\index.js":"11","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\users\\index.js":"12","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\user-profile\\index.js":"13","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\room\\index.js":"14","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\constants\\action-types.js":"15","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\header\\index.js":"16","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\room-item\\index.js":"17","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\chat-messages\\index.js":"18","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\game\\index.js":"19","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\move\\index.js":"20","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\board\\index.js":"21","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\square\\index.js":"22"},{"size":592,"mtime":1607270686637,"results":"23","hashOfConfig":"24"},{"size":519,"mtime":1609950699336,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1606976365402,"results":"26","hashOfConfig":"24"},{"size":213,"mtime":1607270686748,"results":"27","hashOfConfig":"24"},{"size":99,"mtime":1609950699456,"results":"28","hashOfConfig":"24"},{"size":3744,"mtime":1609953479621,"results":"29","hashOfConfig":"24"},{"size":684,"mtime":1609950699448,"results":"30","hashOfConfig":"24"},{"size":425,"mtime":1607270686715,"results":"31","hashOfConfig":"24"},{"size":1680,"mtime":1609952920904,"results":"32","hashOfConfig":"24"},{"size":286,"mtime":1609950699457,"results":"33","hashOfConfig":"24"},{"size":1289,"mtime":1610034280385,"results":"34","hashOfConfig":"24"},{"size":2926,"mtime":1610591232964,"results":"35","hashOfConfig":"24"},{"size":5982,"mtime":1610455437340,"results":"36","hashOfConfig":"24"},{"size":1670,"mtime":1610591484146,"results":"37","hashOfConfig":"24"},{"size":131,"mtime":1609950699417,"results":"38","hashOfConfig":"24"},{"size":1452,"mtime":1609950699379,"results":"39","hashOfConfig":"24"},{"size":1193,"mtime":1610455901129,"results":"40","hashOfConfig":"24"},{"size":670,"mtime":1610457199356,"results":"41","hashOfConfig":"24"},{"size":788,"mtime":1610033573302,"results":"42","hashOfConfig":"24"},{"size":659,"mtime":1609950699384,"results":"43","hashOfConfig":"24"},{"size":768,"mtime":1609950699337,"results":"44","hashOfConfig":"24"},{"size":222,"mtime":1609950699417,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6d8uza",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\index.js",[],["97","98"],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\App.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\reportWebVitals.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\store\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\history.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\login-form\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\the-layout\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\reducers\\user-reducer.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\utils\\NetworkUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\utils\\NotificationUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\rooms\\index.js",["99","100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Typography, Layout, Spin } from \"antd\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport { callServer, callServerGET } from \"../../utils/NetworkUtils\";\r\n\r\nconst Rooms = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [listRooms, setListRooms] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const getListRoom = async () => {\r\n      const response = await callServerGET(process.env.REACT_APP_HOST_NAME + '/rooms/');\r\n      // console.log(response);\r\n      const data = await response.json();\r\n      // console.log(data);\r\n      setListRooms(data.data);\r\n      setIsLoading(false);\r\n    }\r\n    getListRoom();\r\n  },[])\r\n  return (\r\n    <>\r\n      <Layout.Content style={{ padding: \"150px 50px\", position: \"relative\" }}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Đã lưu trữ</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {listRooms.length > 0 ? listRooms.map(item => (<RoomItem info={item}/>)): null}\r\n        </Row>\r\n      </Layout.Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\users\\index.js",["102"],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\user-profile\\index.js",["103"],"import { Row, Col, Typography, Avatar, Button, Layout, Spin } from \"antd\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { callServer } from \"./../../utils/NetworkUtils\";\r\nimport { useHistory } from \"react-router\";\r\nimport moment from \"moment\";\r\nconst UserProfile = (props) => {\r\n  const history = useHistory();\r\n  const urlToken = history.location.pathname.split(\"/\");\r\n  const accountId = urlToken[urlToken.length - 1];\r\n\r\n  const [userProfile, setUserProfile] = useState({});\r\n  const [listHistory, setListHistory] = useState([]);\r\n  const [isActivate, setIsActivate] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async (accountId) => {\r\n      const result = await callServer(\r\n        process.env.REACT_APP_HOST_NAME + \"/users/profile\",\r\n        \"POST\",\r\n        { accountId: accountId }\r\n      );\r\n      // console.log(result);\r\n      // console.log(result.account);\r\n      setUserProfile(result.account);\r\n      setIsActivate(result.account.isActivate);\r\n      // console.log(moment(result.account.isCreatedAt).format(\"DD-MM-YYYY\"));\r\n      // console.log(userProfile);\r\n    };\r\n\r\n    const fetchListHistory = async (accountId) => {\r\n      const result = await callServer(\r\n        process.env.REACT_APP_HOST_NAME + \"/rooms/user\",\r\n        \"POST\",\r\n        { accountId: accountId }\r\n      );\r\n      // console.log(result);\r\n      setListHistory(result.data);\r\n      // console.log(result.data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchUserProfile(accountId);\r\n\r\n    fetchListHistory(accountId);\r\n  }, []);\r\n\r\n  const handleBlockButton = async (accountId) => {\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/users/deactivate\",\r\n      \"POST\",\r\n      { accountId: accountId }\r\n    );\r\n    console.log(result);\r\n    if (result.status === 200) {\r\n      userProfile.isActivate = false;\r\n      setIsActivate(!isActivate);\r\n    }\r\n  };\r\n\r\n  const handleUnblockButton = async (accountId) => {\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/users/activate\",\r\n      \"POST\",\r\n      { accountId: accountId }\r\n    );\r\n    console.log(result);\r\n    if (result.status === 200) {\r\n      userProfile.isActivate = true;\r\n      setIsActivate(!isActivate);\r\n    }\r\n  };\r\n  return (\r\n    <Layout.Content\r\n      style={{ padding: \"150px 50px\", width: \"100vw\", overflowX: \"hidden\" }}\r\n    >\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={2}>Thông tin người chơi</Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Avatar\r\n            size={64}\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"15px\" }} justify=\"center\">\r\n        <Col>\r\n          <Button\r\n            size=\"small\"\r\n            danger={props.status === \"Hoạt động\" ? true : false}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              isActivate\r\n                ? handleBlockButton(accountId)\r\n                : handleUnblockButton(accountId);\r\n              // console.log(userProfile);\r\n              console.log(isActivate);\r\n            }}\r\n          >\r\n            {isActivate ? \"Chặn\" : \"Bỏ chặn\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\" gutter={60}>\r\n        <Col style={{ textAlign: \"center\" }}>\r\n          <Typography.Title style={{ fontWeight: \"300\" }} level={5}>\r\n            Họ và tên\r\n          </Typography.Title>\r\n          <Typography.Title level={4}>\r\n            {userProfile.fullName ? userProfile.fullName : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }}>\r\n          <Typography.Title style={{ fontWeight: \"300\" }} level={5}>\r\n            Tài khoản\r\n          </Typography.Title>\r\n          <Typography.Title level={4}>\r\n            {userProfile.username ? userProfile.username : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }}>\r\n          <Typography.Title style={{ fontWeight: \"300\" }} level={5}>\r\n            Email\r\n          </Typography.Title>\r\n          <Typography.Title level={4}>\r\n            {userProfile.email ? userProfile.email : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }}>\r\n          <Typography.Title style={{ fontWeight: \"300\" }} level={5}>\r\n            Ngày sinh\r\n          </Typography.Title>\r\n          <Typography.Title level={4}>\r\n            {userProfile.dob\r\n              ? moment(userProfile.dob).format(\"DD-MM-YYYY\")\r\n              : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }}>\r\n          <Typography.Title style={{ fontWeight: \"300\" }} level={5}>\r\n            Ngày tham gia\r\n          </Typography.Title>\r\n          <Typography.Title level={4}>\r\n            {userProfile.isCreatedAt\r\n              ? moment(userProfile.isCreatedAt).format(\"DD-MM-YYYY\")\r\n              : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={3}>Lịch sử chơi</Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        gutter={[30, 30]}\r\n        style={{ margin: \"30px 0px\" }}\r\n      >\r\n        {isLoading ? <Spin /> : null}\r\n        {listHistory.length > 0\r\n          ? listHistory.map((item) => <RoomItem info={item} />)\r\n          : null}\r\n      </Row>\r\n    </Layout.Content>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\containers\\room\\index.js",["104","105","106","107","108"],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\constants\\action-types.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\header\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\room-item\\index.js",["109"],"import { EnterOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Card, Col, Image } from \"antd\";\r\nimport React from \"react\";\r\nimport moment from 'moment';\r\nimport \"./index.css\";\r\nimport { useHistory } from \"react-router\";\r\nconst { Meta } = Card;\r\n\r\nconst RoomItem = (props) => {\r\n  // console.log(moment(props.info.isCreatedAt).startOf('day').fromNow());\r\n  const history = useHistory();\r\n  const handleToRoom = (roomId) => {\r\n    history.push(`/room/${roomId}`)\r\n  }\r\n  return (\r\n    <Col span={4}>\r\n      <Card\r\n        className=\"room-card\"\r\n        hoverable\r\n        cover={<Image alt=\"placeholder\" src=\"/room-item.jpg\" />}\r\n        actions={[<EyeOutlined key=\"watch\" onClick={()=>{handleToRoom(props.info._id)}}/>]}\r\n      >\r\n        <Meta\r\n          avatar={\r\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n          }\r\n          title={props.info.name ? props.info.name : \"Username\"}\r\n          description={\r\n            props.info.isCreatedAt ? moment(props.info.isCreatedAt).startOf('day').fromNow() : \"Created 5 minutes ago\"\r\n          }\r\n        />\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\chat-messages\\index.js",["110"],"import { Avatar, Comment, Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst ChatMessage = (props) => {\r\n  return (\r\n    <Comment\r\n      author={<a>{props.info.username}</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.info.content}</p>}\r\n      datetime={\r\n        <Tooltip title={moment(props.info.isCreatedBy).format(\"DD-MM-YYY HH:mm:ss\")}>\r\n          <span>{moment().format(\"DD-MM-YYYY HH:mm:ss\")}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\game\\index.js",["111"],"import { Col } from 'antd';\r\nimport { React, useState } from \"react\";\r\nimport Board from \"../../components/board/index\";\r\nimport \"./index.css\";\r\n\r\n\r\nfunction Game(props)\r\n{\r\n  //const [turnName, setTurnName] = useState(props.turnName);\r\n  const [state, setState] = useState({\r\n    squares: initMatrix(props.size),\r\n    lastMove: -1,\r\n  });\r\n\r\n  return (\r\n    <Col className=\"game-area\">\r\n      <Board\r\n        squares={state.squares}\r\n        onClick={() => { }}\r\n        size={props.size}\r\n      />\r\n    </Col>\r\n  );\r\n\r\n  function initMatrix(size)\r\n  {\r\n    var matrix = [];\r\n    for (var i = 0; i < size; i++)\r\n    {\r\n      matrix[i] = [];\r\n      for (var j = 0; j < size; j++)\r\n      {\r\n        matrix[i][j] = null;\r\n      }\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n}\r\nexport default Game;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\move\\index.js",["112"],"import\r\n{\r\n  Avatar,\r\n\r\n\r\n\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Move = (props) =>\r\n{\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\board\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-adminclient\\src\\components\\square\\index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":35,"nodeType":"119","messageId":"120","endLine":2,"endColumn":39},{"ruleId":"117","severity":1,"message":"121","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":19},{"ruleId":"117","severity":1,"message":"123","line":1,"column":37,"nodeType":"119","messageId":"120","endLine":1,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":47,"column":6,"nodeType":"126","endLine":47,"endColumn":8,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":1,"column":20,"nodeType":"119","messageId":"120","endLine":1,"endColumn":29},{"ruleId":"117","severity":1,"message":"129","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"130","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":12},{"ruleId":"117","severity":1,"message":"131","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":12},{"ruleId":"124","severity":1,"message":"132","line":24,"column":8,"nodeType":"126","endLine":24,"endColumn":10,"suggestions":"133"},{"ruleId":"117","severity":1,"message":"134","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":8,"column":15,"nodeType":"137","endLine":8,"endColumn":18},{"ruleId":"117","severity":1,"message":"138","line":10,"column":17,"nodeType":"119","messageId":"120","endLine":10,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":18,"column":15,"nodeType":"137","endLine":18,"endColumn":18},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Spin' is defined but never used.","Identifier","unusedVar","'callServer' is defined but never used.","'isLoading' is assigned a value but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accountId'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'Statistic' is defined but never used.","'useHistory' is defined but never used.","'Game' is defined but never used.","'Move' is defined but never used.","React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["142"],"'EnterOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [accountId]",{"range":"147","text":"148"},"Update the dependencies array to be: [roomId]",{"range":"149","text":"150"},[1657,1659],"[accountId]",[933,935],"[roomId]"]